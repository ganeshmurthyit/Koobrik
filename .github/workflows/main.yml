name: Terraform Databricks Workspace

on:
  push:
    branches:
      - main

env:
  TF_VERSION: "1.0.0" # You can specify the version of Terraform you want to use
  AWS_DEFAULT_REGION: "us-east-2"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: |
        rm -rf .terraform
        terraform --version
        terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -backend-config="region=${{ env.AWS_DEFAULT_REGION }}"
      
    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip3 install awscli
      
    - name: Configure AWS Credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ env.AWS_DEFAULT_REGION }}
        aws sts get-caller-identity 

    - name: Terraform Validate
      run: terraform validate

  plan:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Terraform Plan
      run: terraform plan -var-file="terraform.tfvars" -out "tfplan"
      env:
        TF_CLI_ARGS: "-input=false"

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan

  apply:
    needs: plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # You can change this to the branch you want to deploy from
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Download Terraform Plan
      uses: actions/download-artifact@v2
      with:
        name: tfplan
      
    - name: Terraform Apply
      run: terraform apply -input=false tfplan
      env:
        TF_CLI_ARGS: "-input=false"

  destroy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # You can change this to the branch you want to deploy from
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Terraform Destroy
      run: terraform destroy --auto-approve
      env:
        TF_CLI_ARGS: "-auto-approve"
